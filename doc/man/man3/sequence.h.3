.TH "/Developer/school/ardp/include/ardp/sequence.h" 3 "Tue Apr 26 2016" "Version 2.2.1" "ARDP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Developer/school/ardp/include/ardp/sequence.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include 'util\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsequence\fP"
.br
.RI "\fIMemory container for generic data storage of sequential data\&. \fP"
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSEQUENCE_MIN_CAPACITY\fP   8"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBsequence_error_handler\fP) (void *data)"
.br
.ti -1c
.RI "typedef void(* \fBsequence_free_handler\fP) (void *data)"
.br
.ti -1c
.RI "typedef void(* \fBsequence_print_handler\fP) (void *data)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBsequence\fP * \fBsequence_create\fP (\fBsequence_free_handler\fP f, \fBsequence_error_handler\fP e, \fBsequence_print_handler\fP p)"
.br
.ti -1c
.RI "size_t \fBsequence_size\fP (struct \fBsequence\fP *seq)"
.br
.ti -1c
.RI "int \fBsequence_set_at\fP (struct \fBsequence\fP *seq, int idx, void *data)"
.br
.ti -1c
.RI "void * \fBsequence_get_at\fP (struct \fBsequence\fP *seq, int idx)"
.br
.ti -1c
.RI "void * \fBsequence_delete_at\fP (struct \fBsequence\fP *seq, int idx)"
.br
.ti -1c
.RI "void * \fBsequence_pop\fP (struct \fBsequence\fP *seq)"
.br
.ti -1c
.RI "int \fBsequence_push\fP (struct \fBsequence\fP *s, void *data)"
.br
.ti -1c
.RI "int \fBsequence_shift\fP (struct \fBsequence\fP *seq, void *data)"
.br
.ti -1c
.RI "void * \fBsequence_unshift\fP (struct \fBsequence\fP *seq)"
.br
.ti -1c
.RI "void \fBsequence_free\fP (struct \fBsequence\fP *seq)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Specifies interface for storage with generic item type\&. Primarily to be used as storage for the RDF:collection\&.
.PP
\fBAuthor:\fP
.RS 4
Tomas Michalek tomas.michalek.st@vsb.cz 
.RE
.PP
\fBDate:\fP
.RS 4
2016 
.RE
.PP

.PP
Definition in file \fBsequence\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define SEQUENCE_MIN_CAPACITY   8"

.PP
Definition at line 25 of file sequence\&.h\&.
.PP
Referenced by sequence_ensure()\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* sequence_error_handler) (void *data)"

.PP
Definition at line 99 of file sequence\&.h\&.
.SS "typedef void(* sequence_free_handler) (void *data)"

.PP
Definition at line 100 of file sequence\&.h\&.
.SS "typedef void(* sequence_print_handler) (void *data)"

.PP
Definition at line 101 of file sequence\&.h\&.
.SH "Function Documentation"
.PP 
.SS "struct \fBsequence\fP* sequence_create (\fBsequence_free_handler\fP f, \fBsequence_error_handler\fP e, \fBsequence_print_handler\fP p)"

.PP
Definition at line 47 of file sequence\&.c\&.
.PP
References sequence::error, sequence::free, sequence::print, and unlikely\&.
.PP
Referenced by main(), and yy_reduce()\&.
.SS "void* sequence_delete_at (struct \fBsequence\fP * seq, int idx)"

.PP
Definition at line 150 of file sequence\&.c\&.
.PP
References sequence::head, sequence::items, sequence::size, and unlikely\&.
.SS "void sequence_free (struct \fBsequence\fP * seq)"

.PP
Definition at line 73 of file sequence\&.c\&.
.PP
References sequence::free, sequence::items, sequence_size(), and sequence_unshift()\&.
.PP
Referenced by main(), yy_destructor(), and yy_reduce()\&.
.SS "void* sequence_get_at (struct \fBsequence\fP * seq, int idx)"

.PP
Definition at line 141 of file sequence\&.c\&.
.PP
References sequence::head, sequence::items, sequence::size, and unlikely\&.
.PP
Referenced by yy_reduce()\&.
.SS "void* sequence_pop (struct \fBsequence\fP * seq)"

.PP
Definition at line 166 of file sequence\&.c\&.
.PP
References sequence::head, sequence::items, sequence::size, and unlikely\&.
.SS "int sequence_push (struct \fBsequence\fP * s, void * data)"

.PP
Definition at line 181 of file sequence\&.c\&.
.PP
References sequence::capacity, sequence::free, sequence::head, sequence::items, sequence_ensure(), and sequence::size\&.
.PP
Referenced by main(), and yy_reduce()\&.
.SS "int sequence_set_at (struct \fBsequence\fP * seq, int idx, void * data)"

.PP
Definition at line 94 of file sequence\&.c\&.
.PP
References sequence::capacity, sequence::free, sequence::head, sequence::items, sequence_ensure(), sequence::size, and unlikely\&.
.SS "int sequence_shift (struct \fBsequence\fP * seq, void * data)"

.PP
Definition at line 202 of file sequence\&.c\&.
.PP
References sequence::capacity, sequence::free, sequence::head, sequence::items, sequence_ensure(), sequence::size, and unlikely\&.
.PP
Referenced by yy_reduce()\&.
.SS "size_t sequence_size (struct \fBsequence\fP * seq)"

.PP
Definition at line 65 of file sequence\&.c\&.
.PP
References sequence::size, and unlikely\&.
.PP
Referenced by sequence_free(), and yy_reduce()\&.
.SS "void* sequence_unshift (struct \fBsequence\fP * seq)"

.PP
Definition at line 222 of file sequence\&.c\&.
.PP
References sequence::head, sequence::items, sequence::size, and unlikely\&.
.PP
Referenced by sequence_free(), and yy_reduce()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ARDP from the source code\&.
