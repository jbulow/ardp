.TH "/Developer/school/ardp/src/lib/parsers/parser.c" 3 "Tue Apr 26 2016" "Version 2.2.1" "ARDP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Developer/school/ardp/src/lib/parsers/parser.c \- 
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fB_cursor\fP"
.br
.ti -1c
.RI "struct \fB_token\fP"
.br
.ti -1c
.RI "struct \fB_parser\fP"
.br
.ti -1c
.RI "union \fB_token\&.value\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_create\fP ()"
.br
.RI "\fICreate and initialize all prerequisites for shared_parser\&. \fP"
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_init\fP (ardp_parser_config_t *cfg)"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_consume\fP (ardp_token_t \fBtoken\fP)"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_set_parse_handler\fP (void *fc)"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_set_error_handler\fP (void *fc)"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_destroy\fP ()"
.br
.RI "\fIUnallocate parser after it is not necessary anymore\&. \fP"
.ti -1c
.RI "\fBardp_parser_push\fP ((\fBtoken\fP){RDF_BNODE,{1, 3},'_:'})"
.br
.ti -1c
.RI "\fBardp_parser_pop\fP ()"
.br
.ti -1c
.RI "ardp_state_t \fBardp_parser_state\fP ()"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_set_base_uri\fP (\fButf8\fP *\fB_Nonnull\fP uri)"
.br
.ti -1c
.RI "ardp_rdf_turtle_prefix_t * \fBardp_parser_prefix_find\fP (const uint8_t *name, size_t len)"
.br
.ti -1c
.RI "\fBardp_status_t\fP \fBardp_parser_prefix_add\fP (const uint8_t *name, const uint8_t *uri)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fB_cursor\fP \fBcursor\fP"
.br
.ti -1c
.RI "struct \fB_token\fP \fBtoken\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "const uint8_t * \fBuri\fP"
.br
.ti -1c
.RI "const uint8_t * \fBname\fP"
.br
.ti -1c
.RI "} \fBardp_rdf_turtle_prefix\fP"
.br
.ti -1c
.RI "struct \fB_parser\fP \fBparser\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Lemon based interface for the generated code\&.
.PP
vim: set syntax=c\&.doxygen
.PP
\fBAuthor:\fP
.RS 4
Tomas Michalek tomas.michalek.st@vbs.cz 
.RE
.PP
\fBDate:\fP
.RS 4
2016 
.RE
.PP

.PP
Definition in file \fBparser\&.c\fP\&.
.SH "Data Structure Documentation"
.PP 
.SH "struct _cursor"
.PP 
Definition at line 13 of file parser\&.c\&.
.PP
\fBData Fields:\fP
.RS 4
size_t \fIcol\fP 
.br
.PP
size_t \fIline\fP 
.br
.PP
.RE
.PP
.SH "struct _token"
.PP 
Definition at line 18 of file parser\&.c\&.
.PP
\fBData Fields:\fP
.RS 4
struct \fBcursor\fP \fIpos\fP 
.br
.PP
union \fB_token\fP \fIvalue\fP 
.br
.PP
.RE
.PP
.SH "union _token\&.value"
.PP 
Definition at line 23 of file parser\&.c\&.
.PP
\fBData Fields:\fP
.RS 4
char \fIchr\fP 
.br
.PP
double \fIdbl\fP 
.br
.PP
int \fIi\fP 
.br
.PP
\fButf8\fP \fIstr\fP 
.br
.PP
.RE
.PP
.SH "Function Documentation"
.PP 
.SS "\fBardp_status_t\fP ardp_parser_consume (ardp_token_t token)"

.SS "\fBardp_status_t\fP ardp_parser_create (void)"

.PP
Create and initialize all prerequisites for shared_parser\&. 
.PP
\fBReturns:\fP
.RS 4
0 if successful, non-zero otherwise\&. 
.RE
.PP

.PP
Definition at line 473 of file test_lemon\&.c\&.
.PP
References ardp_parser_create_internal(), ParseAlloc(), and shared_parser\&.
.SS "\fBardp_status_t\fP ardp_parser_destroy (void)"

.PP
Unallocate parser after it is not necessary anymore\&. Destroy shared lexer\&. And all its underlying structures\&. 
.PP
Definition at line 527 of file test_lemon\&.c\&.
.PP
References ardp_parser_destroy_internal(), ParseFree(), and shared_parser\&.
.SS "\fBardp_status_t\fP ardp_parser_init (ardp_parser_config_t * cfg)"

.SS "ardp_parser_pop ()"

.SS "\fBardp_status_t\fP ardp_parser_prefix_add (const uint8_t * name, const uint8_t * uri)"

.PP
Definition at line 84 of file parser\&.c\&.
.PP
References ardp_parser_prefix_find(), ardp_parser_state(), ardp_rdf_turtle_prefix, and isnt\&.
.SS "ardp_rdf_turtle_prefix_t* ardp_parser_prefix_find (const uint8_t * name, size_t len)"

.PP
Definition at line 73 of file parser\&.c\&.
.PP
References ardp_parser_state(), and isnt\&.
.PP
Referenced by ardp_parser_prefix_add()\&.
.SS "ardp_parser_push ((\fBtoken\fP){RDF_BNODE,{1, 3},'_:'})"

.SS "\fBardp_status_t\fP ardp_parser_set_base_uri (\fButf8\fP *\fB_Nonnull\fP uri)"

.PP
Definition at line 54 of file parser\&.c\&.
.PP
References ardp_parser_state(), is, isnt, string_hdr(), and string_header_t\&.
.SS "\fBardp_status_t\fP ardp_parser_set_error_handler (void * fc)"

.SS "\fBardp_status_t\fP ardp_parser_set_parse_handler (void * fc)"

.SS "ardp_state_t ardp_parser_state ()"

.PP
Definition at line 50 of file parser\&.c\&.
.PP
Referenced by ardp_parser_prefix_add(), ardp_parser_prefix_find(), and ardp_parser_set_base_uri()\&.
.SH "Variable Documentation"
.PP 
.SS "struct { \&.\&.\&. }   ardp_rdf_turtle_prefix"

.PP
Referenced by ardp_parser_prefix_add()\&.
.SS "struct \fB_cursor\fP  cursor"

.SS "struct \fB_parser\fP  \fBparser\fP"

.SS "struct \fB_token\fP  \fBtoken\fP"

.PP
Referenced by transform_uri()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ARDP from the source code\&.
