.TH "/Developer/school/ardp/include/ardp/parser.h" 3 "Tue Apr 26 2016" "Version 2.2.1" "ARDP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Developer/school/ardp/include/ardp/parser.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ardp/string\&.h>\fP
.br
\fC#include <ardp/hashmap\&.h>\fP
.br
\fC#include <ardp/rdf\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBparser\fP"
.br
.ti -1c
.RI "struct \fBdatatype_sys_t\fP"
.br
.ti -1c
.RI "struct \fBparser\&.stats\fP"
.br
.ti -1c
.RI "struct \fBparser\&.cb\fP"
.br
.ti -1c
.RI "struct \fBparser\&.extra\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_Nullable\fP"
.br
.ti -1c
.RI "#define \fB_Nonnull\fP"
.br
.ti -1c
.RI "#define \fB_Null_unspecified\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBardp_parser_create\fP (void)"
.br
.RI "\fICreate and initialize all prerequisites for shared_parser\&. \fP"
.ti -1c
.RI "void \fBardp_parser_exec\fP (int type, void *\fB_Nullable\fP value, size_t line, size_t col)"
.br
.ti -1c
.RI "void \fBardp_parser_finish\fP (void)"
.br
.RI "\fIFlush parser to end one parsing unit\&. \fP"
.ti -1c
.RI "void \fBardp_parser_destroy\fP (void)"
.br
.RI "\fIUnallocate parser after it is not necessary anymore\&. \fP"
.ti -1c
.RI "int \fBardp_parser_add_namespace\fP (\fButf8\fP \fB_Nullable\fP qname, \fButf8\fP \fB_Nullable\fP iri)"
.br
.ti -1c
.RI "int \fBardp_parser_set_default_base\fP (const char *\fB_Nullable\fP base)"
.br
.ti -1c
.RI "int \fBardp_parser_set_option\fP (const uint8_t *\fB_Nullable\fP key, \fBvar\fP \fB_Nullable\fP *\fB_Nullable\fP value)"
.br
.ti -1c
.RI "void \fBardp_parser_trace\fP (void)"
.br
.RI "\fIPrint out parser process\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Interface for the parser, with the interface for the turtle parser\&. 
.PP
Definition in file \fBparser\&.h\fP\&.
.SH "Data Structure Documentation"
.PP 
.SH "struct parser"
.PP 
Parser inner structure which describes its behaviour\&. It's specific for the TURTLE RDF specification\&.
.PP
For another specifications will require to add other properties\&. 
.PP
Definition at line 26 of file parser\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
\fButf8\fP \fB_Nullable\fP \fIbase\fP Bese uri for the <#something> URIs\&. 
.br
.PP
struct \fBparser\fP \fIcb\fP 
.br
.PP
struct \fBparser\fP \fIextra\fP 
.br
.PP
uint64_t \fIn_bnode\fP Keeps track of the last blank-node id\&. 
.br
.PP
\fBmap_t\fP \fB_Nullable\fP \fInamespaces\fP Namespaces map\&. 
.br
.PP
struct \fBparser\fP \fIstats\fP Statistics for the parser\&. 
.br
.PP
.RE
.PP
.SH "struct datatype_sys_t"
.PP 
Definition at line 140 of file parser\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
\fButf8\fP \fB_Nullable\fP \fIdatatype\fP Denotes that the object has datatype\&. 
.br
.PP
\fButf8\fP \fB_Nullable\fP \fIlangtag\fP Denotes that the object has langtag\&. 
.br
.PP
.RE
.PP
.SH "struct parser\&.stats"
.PP 
Statistics for the parser\&. 
.PP
Definition at line 45 of file parser\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
size_t \fIcolumn\fP Current column 
.PP
\fBNote:\fP
.RS 4
used to track errors 
.RE
.PP
\fBWarning:\fP
.RS 4
Not implemented yet in lexer\&. 
.RE
.PP

.br
.PP
size_t \fIline\fP Current line 
.PP
\fBNote:\fP
.RS 4
used to track errors 
.RE
.PP

.br
.PP
size_t \fIn_directives\fP Counts the directives found while parsing\&. 
.br
.PP
size_t \fIn_errors\fP Counts error which occured while parsing (lexer's are separate)\&. 
.br
.PP
size_t \fIn_triples\fP Triples counter 
.br
.PP
.RE
.PP
.SH "struct parser\&.extra"
.PP 
Definition at line 123 of file parser\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
const char *\fB_Nullable\fP \fIbprefix\fP 
.br
.PP
int \fIexpand_curie\fP 
.br
.PP
int \fIexpand_iri\fP 
.br
.PP
int \fIshow_datatype\fP 
.br
.PP
.RE
.PP
.SH "Macro Definition Documentation"
.PP 
.SS "#define _Nonnull"

.PP
Definition at line 10 of file parser\&.h\&.
.SS "#define _Null_unspecified"

.PP
Definition at line 11 of file parser\&.h\&.
.SS "#define _Nullable"

.PP
Definition at line 9 of file parser\&.h\&.
.SH "Function Documentation"
.PP 
.SS "int ardp_parser_add_namespace (\fButf8\fP \fB_Nullable\fP qname, \fButf8\fP \fB_Nullable\fP iri)"

.SS "ardp_parser_create (void)"

.PP
Create and initialize all prerequisites for shared_parser\&. 
.PP
\fBReturns:\fP
.RS 4
0 if successful, non-zero otherwise\&. 
.RE
.PP

.PP
Definition at line 473 of file test_lemon\&.c\&.
.PP
Referenced by main()\&.
.SS "ardp_parser_destroy (void)"

.PP
Unallocate parser after it is not necessary anymore\&. Destroy shared lexer\&. And all its underlying structures\&. 
.PP
Definition at line 527 of file test_lemon\&.c\&.
.PP
Referenced by main()\&.
.SS "void ardp_parser_exec (int type, void *\fB_Nullable\fP value, size_t line, size_t col)"

.PP
Referenced by main()\&.
.SS "ardp_parser_finish (void)"

.PP
Flush parser to end one parsing unit\&. Signals to parser that we reached end of input (EOF, \&.\&.\&.) and that it is supposed to flush all data in buffer\&.
.PP
\fBNote:\fP
.RS 4
Equivalent of calling ardp_parser_exec(0,0); 
.RE
.PP

.PP
Definition at line 517 of file test_lemon\&.c\&.
.PP
References Parse(), and shared_parser\&.
.PP
Referenced by main()\&.
.SS "int ardp_parser_set_default_base (const char *\fB_Nullable\fP base)"

.PP
Referenced by main()\&.
.SS "int ardp_parser_set_option (const uint8_t *\fB_Nullable\fP key, \fBvar\fP \fB_Nullable\fP *\fB_Nullable\fP value)"

.PP
Referenced by main()\&.
.SS "ardp_parser_trace (void)"

.PP
Print out parser process\&. Helps with the debugging of the parser as it writes its current stack as well as reductions and other useful informations\&. 
.PP
Definition at line 573 of file test_lemon\&.c\&.
.PP
References ParseTrace()\&.
.PP
Referenced by main()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ARDP from the source code\&.
